import {
  ToggleButtonElement
} from "./chunk.KIF3XDBQ.js";
import {
  MediaRemoteControl
} from "./chunk.JDCQU7GF.js";
import {
  mediaStoreSubscription
} from "./chunk.O2H47C42.js";

// src/ui/mute-button/MuteButtonElement.ts
import { setAttribute, setAttributeIfEmpty } from "@vidstack/foundation";
var MuteButtonElement = class extends ToggleButtonElement {
  constructor() {
    super();
    this._mediaRemote = new MediaRemoteControl(this);
    this._volume = 1;
    this._muted = false;
    mediaStoreSubscription(this, "volume", ($volume) => {
      this._volume = $volume;
      this._handleMutedChange();
    });
    mediaStoreSubscription(this, "muted", ($muted) => {
      this._muted = $muted;
      this._handleMutedChange();
    });
  }
  connectedCallback() {
    super.connectedCallback();
    setAttributeIfEmpty(this, "aria-label", "Mute");
  }
  _handleMutedChange() {
    const muted = this._muted || this._volume === 0;
    this.pressed = muted;
    setAttribute(this, "muted", muted);
  }
  _handleButtonClick(event) {
    if (this.disabled)
      return;
    if (this.pressed) {
      this._mediaRemote.unmute(event);
    } else {
      this._mediaRemote.mute(event);
    }
  }
};

export {
  MuteButtonElement
};
