import {
  __decorateClass
} from "./chunk.LNH2V2XS.js";

// src/ui/aspect-ratio/AspectRatioElement.ts
import { isString } from "@vidstack/foundation";
import { html, LitElement } from "lit";
import { property } from "lit/decorators.js";
import { styleMap } from "lit/directives/style-map.js";

// src/ui/aspect-ratio/styles.ts
import { css } from "lit";
var aspectRatioElementStyles = css`:host{display:block}:host([hidden]){display:none}.container{position:relative;width:100%;height:0;padding-bottom:min(max(var(--vds-aspect-ratio-min-height),var(--vds-aspect-ratio-percent)),var(--vds-aspect-ratio-max-height))}slot{display:block;position:absolute;top:0;left:0;width:100%;height:100%}::slotted(*){--vds-video-width:100%;--vds-video-height:100%;width:100%;height:100%}`;

// src/ui/aspect-ratio/AspectRatioElement.ts
var AspectRatioElement = class extends LitElement {
  constructor() {
    super(...arguments);
    this.minHeight = "150px";
    this.maxHeight = "100vh";
    this.ratio = "2/1";
  }
  static get styles() {
    return [aspectRatioElementStyles];
  }
  get isValidRatio() {
    return isString(this.ratio) ? /\d{1,2}\s*?(?:\/|:)\s*?\d{1,2}/.test(this.ratio) : false;
  }
  render() {
    return html`<div class="container" style="${styleMap({
      "--vds-aspect-ratio-percent": this._getAspectRatioPercent(),
      "--vds-aspect-ratio-min-height": this.minHeight ?? "150px",
      "--vds-aspect-ratio-max-height": this.maxHeight ?? "100vh"
    })}"><slot></slot></div>`;
  }
  _getAspectRatioPercent() {
    if (this.isValidRatio) {
      const [width, height] = this._parseAspectRatio();
      return `${height / width * 100}%`;
    }
    return "50%";
  }
  _parseAspectRatio() {
    return this.ratio.split(/\s*?(?:\/|:)\s*?/).map(Number);
  }
};
__decorateClass([
  property({ attribute: "min-height" })
], AspectRatioElement.prototype, "minHeight", 2);
__decorateClass([
  property({ attribute: "max-height" })
], AspectRatioElement.prototype, "maxHeight", 2);
__decorateClass([
  property()
], AspectRatioElement.prototype, "ratio", 2);

export {
  AspectRatioElement
};
