import {
  ToggleButtonElement
} from "./chunk.EZDBIN3S.js";
import {
  MediaRemoteControl
} from "./chunk.X5QPRJP2.js";
import {
  mediaStoreSubscription
} from "./chunk.O2H47C42.js";
import {
  __decorateClass
} from "./chunk.LNH2V2XS.js";

// src/ui/fullscreen-button/FullscreenButtonElement.ts
import { setAttribute, setAttributeIfEmpty } from "@vidstack/foundation";
import { property } from "lit/decorators.js";
var FullscreenButtonElement = class extends ToggleButtonElement {
  constructor() {
    super();
    this._mediaRemote = new MediaRemoteControl(this);
    mediaStoreSubscription(this, "fullscreen", ($fullscreen) => {
      this.pressed = $fullscreen;
      setAttribute(this, "fullscreen", $fullscreen);
    });
    mediaStoreSubscription(this, "canFullscreen", ($canFullscreen) => {
      setAttribute(this, "hidden", !$canFullscreen);
    });
  }
  connectedCallback() {
    super.connectedCallback();
    setAttributeIfEmpty(this, "aria-label", "Fullscreen");
  }
  _handleButtonClick(event) {
    if (this.disabled)
      return;
    if (this.pressed) {
      this._mediaRemote.exitFullscreen(this.target, event);
    } else {
      this._mediaRemote.enterFullscreen(this.target, event);
    }
  }
};
__decorateClass([
  property({ attribute: "target" })
], FullscreenButtonElement.prototype, "target", 2);

export {
  FullscreenButtonElement
};
