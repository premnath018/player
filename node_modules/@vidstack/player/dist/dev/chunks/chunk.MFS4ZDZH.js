import {
  MediaRemoteControl
} from "./chunk.X5QPRJP2.js";
import {
  mediaStoreSubscription
} from "./chunk.O2H47C42.js";
import {
  __decorateClass
} from "./chunk.LNH2V2XS.js";

// src/ui/poster/PosterElement.ts
import { preconnect } from "@vidstack/foundation";
import { css, html, LitElement } from "lit";
import { property, state } from "lit/decorators.js";
import { ifDefined } from "lit/directives/if-defined.js";
var didPreconnect = /* @__PURE__ */ new Set();
var PosterElement = class extends LitElement {
  constructor() {
    super();
    this.__canLoad = false;
    this._mediaRemoteControl = new MediaRemoteControl(this);
    mediaStoreSubscription(this, "poster", ($poster) => {
      window.requestAnimationFrame(() => {
        if (!this.__canLoad && !didPreconnect.has($poster)) {
          preconnect($poster, "prefetch");
          didPreconnect.add($poster);
        }
      });
      this.__src = $poster;
    });
    mediaStoreSubscription(this, "canLoad", ($canLoad) => {
      this._handleCanLoadChange($canLoad);
      this.__canLoad = $canLoad;
    });
  }
  static get styles() {
    return [
      css`
        :host {
          display: block;
          contain: content;
          pointer-events: none;
          object-fit: cover;
          box-sizing: border-box;
        }

        :host([hidden]) {
          display: none;
        }

        img {
          display: block;
          width: 100%;
          height: 100%;
          pointer-events: none;
          object-fit: inherit;
          object-position: inherit;
          user-select: none;
          -webkit-user-select: none;
          box-sizing: border-box;
        }
      `
    ];
  }
  get src() {
    return this.__src;
  }
  connectedCallback() {
    super.connectedCallback();
    this._mediaRemoteControl.hidePoster();
  }
  disconnectedCallback() {
    this._mediaRemoteControl.showPoster();
    super.disconnectedCallback();
    this._handleCanLoadChange(false);
  }
  render() {
    return html`
      <img
        part="img"
        src=${ifDefined(this.__canLoad ? this.src : null)}
        alt=${ifDefined(this.alt)}
        @load=${this._handleImgLoad}
        @error=${this._handleImgError}
      />
    `;
  }
  _setImgLoadingAttr() {
    this.removeAttribute("img-error");
    this.removeAttribute("img-loaded");
    if (this.src && this.src.length > 0) {
      this.setAttribute("img-loading", "");
    }
  }
  _handleImgLoad() {
    this.removeAttribute("img-loading");
    this.setAttribute("img-loaded", "");
  }
  _handleImgError() {
    this.removeAttribute("img-loading");
    this.setAttribute("img-error", "");
  }
  _handleCanLoadChange(canLoad) {
    if (canLoad) {
      this._setImgLoadingAttr();
    } else {
      this.removeAttribute("img-error");
      this.removeAttribute("img-loaded");
      this.removeAttribute("img-loading");
    }
  }
};
__decorateClass([
  state()
], PosterElement.prototype, "__src", 2);
__decorateClass([
  state()
], PosterElement.prototype, "__canLoad", 2);
__decorateClass([
  property()
], PosterElement.prototype, "alt", 2);

export {
  PosterElement
};
